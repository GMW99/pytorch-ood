# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.9-buster

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  REPOSITORY_URL: "$CI_PROJECT_URL/-/packages/pypi"
  PACKAGENAME: "oodtk"


# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

stages:
  - test
  - build
  - docs


before_script:
  - python -V  # Print out python version for debugging
  - apt-get update
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install twine
  - pip install -r requirements.txt
  - pip freeze # print package versions for debugging

test:
  script:
    - python -m unittest discover -s test
    - echo "Calculating test coverage for the project."
    - pip install coverage
    - coverage run -m unittest discover
    - coverage html
  artifacts:
    paths:
      - htmlcov/

build:
  stage: build
  script:
    - echo "Building the Package"
    - pip install wheel
    - python3 setup.py bdist_wheel
  artifacts:
    paths:
      - dist/*.whl

docs:
  stage: docs
  script:
    - echo "Building the documentation for the package."
    - pip install sphinx sphinx-rtd-theme
    - sphinx-build -b html docs/source docs/build/html/

  artifacts:
    paths:
      - docs/build/html/*



